# Spark Log4j Configuration for ML Pipeline Framework
# This configuration provides appropriate logging levels for containerized environments

# Root logger option
log4j.rootLogger=WARN, console

# Direct log messages to console
log4j.appender.console=org.apache.log4j.ConsoleAppender
log4j.appender.console.Target=System.out
log4j.appender.console.layout=org.apache.log4j.PatternLayout
log4j.appender.console.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss} %-5p %c{1}:%L - %m%n

# Settings to quiet some overly verbose logs
log4j.logger.org.apache.spark.repl.Main=WARN
log4j.logger.org.spark_project.jetty=WARN
log4j.logger.org.spark_project.jetty.util.component.AbstractLifeCycle=ERROR
log4j.logger.org.apache.spark.repl.SparkIMain$exprTyper=INFO
log4j.logger.org.apache.spark.repl.SparkILoop$SparkILoopInterpreter=INFO
log4j.logger.org.apache.parquet=ERROR
log4j.logger.parquet=ERROR
log4j.logger.org.apache.hadoop.hive.metastore.RetryingHMSHandler=FATAL
log4j.logger.org.apache.hadoop.hive.ql.exec.FunctionRegistry=ERROR

# Reduce verbosity for specific Spark components
log4j.logger.org.apache.spark.storage.BlockManager=WARN
log4j.logger.org.apache.spark.storage.BlockManagerInfo=WARN
log4j.logger.org.apache.spark.storage.memory.MemoryStore=WARN
log4j.logger.org.apache.spark.scheduler.DAGScheduler=WARN
log4j.logger.org.apache.spark.scheduler.TaskSchedulerImpl=WARN
log4j.logger.org.apache.spark.executor.Executor=WARN
log4j.logger.org.apache.spark.shuffle.sort.SortShuffleManager=WARN

# Reduce Hive verbosity
log4j.logger.org.apache.hadoop.hive=WARN
log4j.logger.hive=WARN

# Reduce Hadoop verbosity
log4j.logger.org.apache.hadoop=WARN
log4j.logger.hadoop=WARN

# Enable INFO level for ML Pipeline Framework logs
log4j.logger.ml_pipeline_framework=INFO

# Enable DEBUG for specific components if needed (uncomment as needed)
# log4j.logger.ml_pipeline_framework.data_access=DEBUG
# log4j.logger.ml_pipeline_framework.models=DEBUG
# log4j.logger.ml_pipeline_framework.preprocessing=DEBUG

# File appender for persistent logging (optional)
# log4j.appender.file=org.apache.log4j.RollingFileAppender
# log4j.appender.file.File=/app/logs/spark.log
# log4j.appender.file.MaxFileSize=10MB
# log4j.appender.file.MaxBackupIndex=5
# log4j.appender.file.layout=org.apache.log4j.PatternLayout
# log4j.appender.file.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss} %-5p %c{1}:%L - %m%n

# Add file appender to root logger if using file logging
# log4j.rootLogger=WARN, console, file